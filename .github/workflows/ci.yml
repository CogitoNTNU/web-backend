name: CI Pipeline

on:
  push:
    branches: ["main", "development"]
  pull_request:
    branches: ["main", "development"]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
    steps:
      - uses: actions/checkout@v3
      - name: Build docker image and run tests
        env:
          DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
          DEBUG: "True"
        run: |
          docker compose build
          docker compose run cogito python manage.py makemigrations
          docker compose run cogito python manage.py migrate
          docker compose up -d
          docker compose run cogito python manage.py test
          docker compose down

  push-to-container-registry:
    runs-on: ubuntu-latest
    needs: [build-and-test]
    if: github.ref == 'refs/heads/main'
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Extract short SHA
      id: git_sha
      run: echo "GIT_SHA=$(git rev-parse --short $GITHUB_SHA)" >> $GITHUB_ENV
    - name: Build and Push Docker Backend Image
      run: |
        docker build -t ghcr.io/cogitontnu/web-backend-image:${{ env.GIT_SHA }} .
        docker push ghcr.io/cogitontnu/web-backend-image:${{ env.GIT_SHA }}


  dependabot:
    permissions:
      pull-requests: write
      contents: write

    name: 'Dependabot'
    # After the other jobs complete, if one of them fails, it won't merge the PR.
    needs: [build-and-test]
    runs-on: ubuntu-latest
    # Detect that the PR author is dependabot
    if: ${{ github.actor == 'dependabot[bot]' && github.event_name == 'pull_request'}}
    steps:
      - name: Enable auto-merge for Dependabot PRs
        # Use Github CLI to merge automatically the PR
        run: gh pr merge --auto --merge "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}