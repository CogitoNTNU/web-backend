services:
  cogito:
    build: 
      context: .
      dockerfile: Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    depends_on:
      - db
    environment:
      DEBUG: "${DEBUG}"
      EMAIL_HOST_USER: "${EMAIL_HOST_USER}"
      EMAIL_HOST_PASSWORD: "${EMAIL_HOST_PASSWORD}"
      DATABASE_HOST: db
      DATABASE_PORT: 5432
      DATABASE_NAME: cogitodb
      DATABASE_USER: cogitouser
      DATABASE_PASSWORD: cogitopassword
    restart: always
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.entrypoints=http"
      - "traefik.http.routers.backend.rule=Host(`backend.cogito-ntnu.no`)"
      - "traefik.http.middlewares.backend-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.backend.middlewares=backend-https-redirect"
      - "traefik.http.routers.backend-secure.entrypoints=https"
      - "traefik.http.routers.backend-secure.rule=Host(`backend.cogito-ntnu.no`)"
      - "traefik.http.routers.backend-secure.tls=true"
      - "traefik.http.routers.backend-secure.tls.certresolver=cloudflare"
      - "traefik.http.routers.backend-secure.service=backend"
      - "traefik.http.services.backend.loadbalancer.server.port=8000"


  db:
    image: postgres:13
    container_name: cogito_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: cogitodb
      POSTGRES_USER: cogitouser
      POSTGRES_PASSWORD: cogitopassword
    restart: always
    networks:
      - proxy

volumes:
  postgres_data:

networks:
  proxy:
    external: true 